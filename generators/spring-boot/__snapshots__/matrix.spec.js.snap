// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-jwt-cassandra-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-enableSwaggerCodegen:true-websocket(false)-skipUserManagement(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTRelayGatewayFilterFactory.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-jwt-couchbase-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-cucumber-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTRelayGatewayFilterFactory.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-jwt-mongodb-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-cucumber-websocket(true)-skipUserManagement(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTRelayGatewayFilterFactory.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-jwt-neo4j-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-websocket(false)-skipUserManagement(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTRelayGatewayFilterFactory.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-jwt-sql-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-gatling-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AuthorityCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/UserRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTRelayGatewayFilterFactory.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user_authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-oauth2-cassandra-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-gatling-websocket(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-oauth2-couchbase-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-gatling-enableSwaggerCodegen:true-websocket(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-oauth2-mongodb-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-cucumber-websocket(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-oauth2-neo4j-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-gatling-enableSwaggerCodegen:true-websocket(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > gateway-oauth2-sql-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-enableSwaggerCodegen:true-websocket(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AuthorityCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/rowmapper/UserRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/GatewayResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/RouteVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/filter/ModifyServersOpenApiFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-cassandra-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-cucumber-websocket(false)-skipUserManagement(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/UserFeignClientInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-cassandra-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-enableSwaggerCodegen:true-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-couchbase-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-cucumber-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/UserFeignClientInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-couchbase-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-skipUserManagement(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-mongodb-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-gatling-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/UserFeignClientInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-mongodb-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-gatling-skipUserManagement(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-neo4j-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi--DTO-skipCommitHook(false)-websocket(false)-skipUserManagement(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/UserFeignClientInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-neo4j-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix-Entity-Rest-skipCommitHook(true)-cucumber-enableSwaggerCodegen:true-skipUserManagement(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-sql-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-gatling-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/UserFeignClientInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationships.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationshipsImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/SimpleQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/CriteriaAndDtoCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/SimpleCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-jwt-sql-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-gatling-enableSwaggerCodegen:true-skipUserManagement(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/MicroserviceRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-cassandra-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-cucumber-enableSwaggerCodegen:true-websocket(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/AuthorizedFeignClient.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/OAuth2InterceptedFeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/TokenRelayRequestInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtil.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtilTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-cassandra-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-couchbase-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-websocket(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/AuthorizedFeignClient.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/OAuth2InterceptedFeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/TokenRelayRequestInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtil.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtilTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-couchbase-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-cucumber-enableSwaggerCodegen:true-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-mongodb-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-cucumber-websocket(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/AuthorizedFeignClient.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/OAuth2InterceptedFeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/TokenRelayRequestInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtil.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtilTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-mongodb-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-enableSwaggerCodegen:true-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-neo4j-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(true)-enableSwaggerCodegen:true-websocket(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/AuthorizedFeignClient.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/OAuth2InterceptedFeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/TokenRelayRequestInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtil.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtilTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-neo4j-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(false)-cucumber-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-sql-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-gatling-enableSwaggerCodegen:true-websocket(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/hazelcast-management-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/AuthorizedFeignClient.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/OAuth2InterceptedFeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/client/TokenRelayRequestInterceptor.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/FeignConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationships.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationshipsImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtil.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/SimpleQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/CriteriaAndDtoCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/SimpleCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AuthorizationHeaderUtilTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > microservice-oauth2-sql-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-gatling-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AuthorityCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/MicroserviceRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/UserRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/static/index.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-cassandra-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-cassandra-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-cucumber-skipUserManagement(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-couchbase-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-gatling-websocket(false)-skipUserManagement(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-couchbase-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-gatling-enableSwaggerCodegen:true-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-mongodb-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-mongodb-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-cucumber-enableSwaggerCodegen:true-skipUserManagement(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-neo4j-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-gatling-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-neo4j-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-gatling-skipUserManagement(true)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-sql-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-cucumber-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationships.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationshipsImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/SimpleQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/CriteriaAndDtoCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/SimpleCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user_authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/UserStepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/user.feature": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-jwt-sql-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/MicroserviceRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-cassandra-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-gatling-websocket(false)-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/CustomClaimConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2RefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/CustomClaimConverterIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-cassandra-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-gatling-enableSwaggerCodegen:true-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-couchbase-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-gatling-enableSwaggerCodegen:true-websocket(true)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/CustomClaimConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2RefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/CustomClaimConverterIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-couchbase-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-gatling-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-mongodb-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-enableSwaggerCodegen:true-websocket(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/CustomClaimConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2RefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/CustomClaimConverterIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-mongodb-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-cucumber-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-neo4j-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-cucumber-websocket(false)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/CustomClaimConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2RefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/CustomClaimConverterIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-neo4j-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-enableSwaggerCodegen:true-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-sql-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(false)-websocket(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationships.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationshipsImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/CustomClaimConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/SimpleQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/CriteriaAndDtoCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/SimpleCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/filter/OAuth2RefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/oauth2/CustomClaimConverterIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-oauth2-sql-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(true)-cucumber-enableSwaggerCodegen:true-eureka > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/docker-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/localhost-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-registry.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/keycloak.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/jhipster-realm.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/realm-config/keycloak-health-check.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/EurekaWorkaroundConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/OAuth2Configuration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AuthorityCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/UserSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/MicroserviceRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/UserRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/AudienceValidator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/JwtGrantedAuthorityConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/oauth2/OAuthIdpTokenResponseDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/filter/OAuth2ReactiveRefreshTokensWebFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AuthInfoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/LogoutResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/oauth2/AudienceValidatorTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/test/util/OAuth2TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/LogoutResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-cassandra-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/PersistentToken.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/PersistentTokenRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/PersistentTokenRememberMeServices.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000000_create-tables.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/00000000000001_insert_default_users.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-cassandra-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-cucumber-enableSwaggerCodegen:true-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra-migration.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/Cassandra-Migration.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/autoMigrate.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/cassandra/scripts/execute-cql.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000100_added_entity_Simple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000200_added_entity_AnotherSimple.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129000300_added_entity_Microservice.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001000_added_entity_CriteriaAndDto.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001100_added_entity_EntityWithEnum.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/20220129002000_added_entity_EntityWithCustomId.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/changelog/README.md": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace-prod.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/create-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/cql/drop-keyspace.cql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/CassandraKeyspaceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CassandraTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCassandra.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-couchbase-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/PersistentToken.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/PersistentTokenRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/PersistentTokenRememberMeServices.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_ADMIN.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/authority/ROLE_USER.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.1__initial_setup/user/user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0.2__create_indexes.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V0__create_collections.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-couchbase-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-cucumber-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.cucumber-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/Couchbase.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/couchbase/scripts/configure-node.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/JHipsterCouchbaseRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000100__simple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000200__anothersimple.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129000300__microservice.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001000__criteriaanddto.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001100__entitywithenum.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129001200__relationshipwithbagrelationship.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/couchmove/changelog/V20220129002000__entitywithcustomid.n1ql": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/CouchbaseTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedCouchbase.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/com/mycompany/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-mongodb-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-cucumber-enableSwaggerCodegen:true-websocket(true)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebsocketSecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/dbmigrations/InitialSetupMigration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/PersistentToken.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/PersistentTokenRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/PersistentTokenRememberMeServices.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/ActivityService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/websocket/dto/ActivityDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-mongodb-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb-cluster.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/MongoDB.Dockerfile": {
    "stateCleared": "modified",
  },
  "src/main/docker/mongodb/scripts/init_replicaset.js": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedMongo.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/MongoDbTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-neo4j-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-Rest-skipCommitHook(false)-gatling-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/neo4j/Neo4jMigrations.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/PersistentToken.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/PersistentTokenRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/PersistentTokenRememberMeServices.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__admin.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/neo4j/migrations/user__user.json": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-neo4j-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--DTO-skipCommitHook(true)-gatling-enableSwaggerCodegen:true-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.gatling-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/neo4j.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/gatling.conf": {
    "stateCleared": "modified",
  },
  "src/test/gatling/conf/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/AnotherSimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/CriteriaAndDtoGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithCustomIdGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/EntityWithEnumGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/MicroserviceGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/RelationshipWithBagRelationshipGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/gatling/user-files/simulations/SimpleGatlingTest.scala": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedNeo4j.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/Neo4jTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-sql-reactive(false)-maven-enableTranslation(false)-tech.jhipster-jhi-Entity-DTO-skipCommitHook(true)-cucumber-websocket(false)-skipUserManagement(false)-serviceDiscoveryType(no) > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/AnotherSimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/CriteriaAndDtoEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/EntityWithEnumEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/MicroserviceEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/PersistentToken.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/SimpleEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/UserEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/PersistentTokenRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationships.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/RelationshipWithBagRelationshipRepositoryWithBagRelationshipsImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/PersistentTokenRememberMeServices.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/SimpleQueryService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/CriteriaAndDtoCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/criteria/SimpleCriteria.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/AnotherSimpleDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/tech/jhipster/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user_authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/CucumberTestContextConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/StepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/cucumber/stepdefs/UserStepDefs.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/domain/EntityWithCustomIdEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AnotherSimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/AuthorityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/CriteriaAndDtoEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/EntityWithEnumEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/MicroserviceEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/RelationshipWithBagRelationshipEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/domain/SimpleEntityTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/AnotherSimpleDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/dto/CriteriaAndDtoDTOTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/tech/jhipster/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/gitkeep": {
    "stateCleared": "modified",
  },
  "src/test/resources/tech/jhipster/cucumber/user.feature": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;

exports[`Matrix test of SubGenerator kotlin of kotlin JHipster blueprint > monolith-session-sql-reactive(true)-gradle-enableTranslation(true)-com.mycompany-fix--Rest-skipCommitHook(false)-enableSwaggerCodegen:true-skipUserManagement(true)-consul > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".jhipster/AnotherSimple.json": {
    "stateCleared": "modified",
  },
  ".jhipster/CriteriaAndDto.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithCustomId.json": {
    "stateCleared": "modified",
  },
  ".jhipster/EntityWithEnum.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Microservice.json": {
    "stateCleared": "modified",
  },
  ".jhipster/RelationshipWithBagRelationship.json": {
    "stateCleared": "modified",
  },
  ".jhipster/Simple.json": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/build.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.code-quality-conventions.gradle": {
    "stateCleared": "modified",
  },
  "buildSrc/src/main/groovy/jhipster.docker-conventions.gradle": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "gradle.properties": {
    "stateCleared": "modified",
  },
  "gradle/kotlin.gradle": {
    "stateCleared": "modified",
  },
  "gradle/libs.versions.toml": {
    "stateCleared": "modified",
  },
  "gradle/liquibase.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_dev.gradle": {
    "stateCleared": "modified",
  },
  "gradle/profile_prod.gradle": {
    "stateCleared": "modified",
  },
  "gradle/war.gradle": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.jar": {
    "stateCleared": "modified",
  },
  "gradle/wrapper/gradle-wrapper.properties": {
    "stateCleared": "modified",
  },
  "gradle/zipkin.gradle": {
    "stateCleared": "modified",
  },
  "gradlew": {
    "stateCleared": "modified",
  },
  "gradlew.bat": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "settings.gradle": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/README.md": {
    "stateCleared": "modified",
  },
  "src/main/docker/central-server-config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/config/git2consul.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/consul.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/zipkin.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/ReactorConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomId.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/domain/EntityWithCustomIdCallback.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/EntityWithCustomIdSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/repository/rowmapper/EntityWithCustomIdRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/AnotherSimple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/CriteriaAndDto.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/EntityWithEnum.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Microservice.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/RelationshipWithBagRelationship.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/Simple.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/domain/enumeration/EnumFieldClass.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/AnotherSimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/CriteriaAndDtoSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityManager.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/EntityWithEnumSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/MicroserviceSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/RelationshipWithBagRelationshipSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleRepositoryInternalImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/SimpleSqlHelper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/AnotherSimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/ColumnConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/CriteriaAndDtoRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/EntityWithEnumRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/MicroserviceRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/RelationshipWithBagRelationshipRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/repository/rowmapper/SimpleRowMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/AnotherSimpleService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/CriteriaAndDtoService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/AnotherSimpleRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/dto/CriteriaAndDtoRest.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/AnotherSimpleServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/impl/CriteriaAndDtoServiceImpl.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/AnotherSimpleMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/service/mapper/EntityMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/AnotherSimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/CriteriaAndDtoResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/EntityWithEnumResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/MicroserviceResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/SimpleResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000100_added_entity_Simple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000200_added_entity_AnotherSimple.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129000300_added_entity_Microservice.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001000_added_entity_CriteriaAndDto.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001100_added_entity_EntityWithEnum.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129001200_added_entity_constraints_RelationshipWithBagRelationship.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/20220129002000_added_entity_EntityWithCustomId.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/another_simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/criteria_and_dto.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_custom_id.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/entity_with_enum.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/relationship_with_bag_relationship.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/fake-data/simple.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/JHipsterBlockHoundIntegration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/domain/EntityWithCustomIdTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/custom/web/rest/EntityWithCustomIdResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/AnotherSimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/CriteriaAndDtoTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/EntityWithEnumTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/MicroserviceTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/RelationshipWithBagRelationshipTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/domain/SimpleTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/AnotherSimpleRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/dto/CriteriaAndDtoRestTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/AnotherSimpleMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/service/mapper/CriteriaAndDtoMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/AnotherSimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/CriteriaAndDtoResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/EntityWithEnumResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/MicroserviceResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/RelationshipWithBagRelationshipResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/SimpleResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/services/reactor.blockhound.integration.BlockHoundIntegration": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/bootstrap.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;
