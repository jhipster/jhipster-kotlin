// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SubGenerator kotlin of kotlin JHipster blueprint > run > should succeed 1`] = `
{
  ".devcontainer/Dockerfile": {
    "stateCleared": "modified",
  },
  ".devcontainer/devcontainer.json": {
    "stateCleared": "modified",
  },
  ".editorconfig": {
    "stateCleared": "modified",
  },
  ".gitattributes": {
    "stateCleared": "modified",
  },
  ".gitignore": {
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "stateCleared": "modified",
  },
  ".mvn/jvm.config": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.jar": {
    "stateCleared": "modified",
  },
  ".mvn/wrapper/maven-wrapper.properties": {
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "README.md": {
    "stateCleared": "modified",
  },
  "checkstyle.xml": {
    "stateCleared": "modified",
  },
  "detekt-config.yml": {
    "stateCleared": "modified",
  },
  "mvnw": {
    "stateCleared": "modified",
  },
  "mvnw.cmd": {
    "stateCleared": "modified",
  },
  "npmw": {
    "stateCleared": "modified",
  },
  "npmw.cmd": {
    "stateCleared": "modified",
  },
  "package.json": {
    "stateCleared": "modified",
  },
  "pom.xml": {
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "stateCleared": "modified",
  },
  "src/main/docker/app.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/JVM.json": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/dashboards/dashboard.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/grafana/provisioning/datasources/datasource.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jhipster-control-center.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/jib/entrypoint.sh": {
    "stateCleared": "modified",
  },
  "src/main/docker/monitoring.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/postgresql.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/prometheus/prometheus.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/services.yml": {
    "stateCleared": "modified",
  },
  "src/main/docker/sonar.yml": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/ApplicationWebXml.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/GeneratedByJHipster.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/JhipsterApp.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/aop/logging/LoggingAspect.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/ApplicationProperties.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/AsyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/CRLFLogConverter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/CacheConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/Constants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/DatabaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/DateTimeFormatConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/JacksonConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/LiquibaseConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/LocaleConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/LoggingAspectConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/LoggingConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/SecurityConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/StaticResourcesWebConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/config/WebConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/domain/AbstractAuditingEntity.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/domain/Authority.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/domain/User.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/management/SecurityMetersService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/repository/AuthorityRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/repository/UserRepository.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/AuthoritiesConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/DomainUserDetailsService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/SecurityUtils.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/SpringSecurityAuditorAware.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/UserNotActivatedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/jwt/JWTConfigurer.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/jwt/JWTFilter.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/security/jwt/TokenProvider.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/MailService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/UserService.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/UsernameAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/dto/AdminUserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/dto/PasswordChangeDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/dto/UserDTO.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/service/mapper/UserMapper.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/AccountResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/ClientForwardController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/PublicUserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/UserJWTController.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/UserResource.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/BadRequestAlertException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/EmailAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/ErrorConstants.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/ExceptionTranslator.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/FieldErrorVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/InvalidPasswordException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/errors/LoginAlreadyUsedException.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/vm/KeyAndPasswordVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/vm/LoginVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/kotlin/com/mycompany/myapp/web/rest/vm/ManagedUserVM.kt": {
    "stateCleared": "modified",
  },
  "src/main/resources/banner.txt": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-dev.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-prod.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-tls.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/data/user_authority.csv": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/liquibase/master.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/config/tls/keystore.p12": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/main/resources/logback-spring.xml": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/error.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/activate.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/configuration.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/error.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/global.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/health.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/home.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/login.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/logs.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/metrics.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/password.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/register.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/reset.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/sessions.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/settings.json": {
    "stateCleared": "modified",
  },
  "src/main/webapp/i18n/en/user-management.json": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/IntegrationTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/TechnicalStructureTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/AsyncSyncConfiguration.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/EmbeddedSQL.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/PostgreSqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/SpringBootTestClassOrderer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/SqlTestContainer.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/StaticResourcesWebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/TestContainersSpringContextCustomizerFactory.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/WebConfigurerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/WebConfigurerTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/config/timezone/HibernateTimeZoneIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/management/SecurityMetersServiceTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/repository/timezone/DateTimeWrapper.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/repository/timezone/DateTimeWrapperRepository.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/security/DomainUserDetailsServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/security/SecurityUtilsUnitTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/security/jwt/JWTFilterTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/security/jwt/TokenProviderSecurityMetersTests.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/security/jwt/TokenProviderTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/service/MailServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/service/UserServiceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/service/mapper/UserMapperTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/AccountResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/ClientForwardControllerTest.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/PublicUserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/TestUtil.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/UserJWTControllerIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/UserResourceIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/WithUnauthenticatedMockUser.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/errors/ExceptionTranslatorIT.kt": {
    "stateCleared": "modified",
  },
  "src/test/kotlin/com/mycompany/myapp/web/rest/errors/ExceptionTranslatorTestController.kt": {
    "stateCleared": "modified",
  },
  "src/test/resources/META-INF/spring.factories": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testdev.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application-testprod.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/config/application.yml": {
    "stateCleared": "modified",
  },
  "src/test/resources/i18n/messages_en.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/junit-platform.properties": {
    "stateCleared": "modified",
  },
  "src/test/resources/logback.xml": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/activationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/creationEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/passwordResetEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/templates/mail/testEmail.html": {
    "stateCleared": "modified",
  },
  "src/test/resources/testcontainers.properties": {
    "stateCleared": "modified",
  },
}
`;
