<%#
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%= packageName %>.web.rest.errors

<%_ if (databaseType !== 'no' && databaseType !== 'cassandra') { _%>
import org.springframework.dao.ConcurrencyFailureException
<%_ } _%>
import org.springframework.http.HttpStatus
import org.springframework.security.access.AccessDeniedException
import org.springframework.security.authentication.BadCredentialsException
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestParam
import org.springframework.web.bind.annotation.RequestPart
import org.springframework.web.bind.annotation.ResponseStatus
import org.springframework.web.bind.annotation.RestController

import javax.validation.Valid
import javax.validation.constraints.NotNull

@RestController
class ExceptionTranslatorTestController {
    <%_ if (databaseType !== 'no' && databaseType !== 'cassandra') { _%>

    @GetMapping("/test/concurrency-failure")
    fun concurrencyFailure(): Unit = throw ConcurrencyFailureException("test concurrency failure")
    <%_ } _%>

    @PostMapping("/test/method-argument")
    fun methodArgument(@Valid @RequestBody test<%= dtoSuffix %>: Test<%= dtoSuffix %> ) = Unit

    @GetMapping("/test/missing-servlet-request-part")
    fun missingServletRequestPartException(@RequestPart part: String) = Unit

    @GetMapping("/test/missing-servlet-request-parameter")
    fun missingServletRequestParameterException(@RequestParam param: String) = Unit

    @GetMapping("/test/access-denied")
    fun accessdenied(): Unit = throw AccessDeniedException("test access denied!")

    @GetMapping("/test/unauthorized")
    fun unauthorized(): Unit = throw BadCredentialsException("test authentication failed!")

    @GetMapping("/test/response-status")
    fun exceptionWithResponseStatus(): Unit = throw TestResponseStatusException()

    @GetMapping("/test/internal-server-error")
    fun internalServerError(): Unit = throw RuntimeException()

    class Test<%= dtoSuffix %> {
        @field:NotNull
        var test: String? = null
    }

    @ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "test response status")
    class TestResponseStatusException : RuntimeException()
}
