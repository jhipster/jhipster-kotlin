<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://jhipster.github.io/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License")
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%= packageName %>.security.oauth2

import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.databind.node.ObjectNode
import <%= packageName %>.<%= mainClass %>
import <%= packageName %>.config.TestSecurityConfiguration
import <%= packageName %>.security.ADMIN
import <%= packageName %>.security.USER
import <%= packageName %>.IntegrationTest
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith
import org.mockito.ArgumentMatchers
import org.mockito.Mock
import org.mockito.junit.jupiter.MockitoExtension
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.http.HttpEntity
import org.springframework.http.HttpMethod
import org.springframework.http.ResponseEntity
import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository
<%_ if (databaseType !== 'no') { _%>
import org.springframework.transaction.annotation.Transactional
<%_ } _%>
import org.springframework.web.client.RestTemplate

import org.assertj.core.api.Assertions.assertThat
import org.mockito.ArgumentMatchers.any
import org.mockito.ArgumentMatchers.eq
import org.mockito.Mockito.`when`


private const val USERNAME = "admin"
private const val NAME = "John"
private const val FAMILY_NAME = "Doe"

@IntegrationTest
@ExtendWith(MockitoExtension::class)
class CustomClaimConverterIT {

    @Mock
    private lateinit var restTemplate: RestTemplate

    @Autowired
    private lateinit var clientRegistrationRepository: ClientRegistrationRepository

    private lateinit var customClaimConverter: CustomClaimConverter

    @BeforeEach
    fun initTest() {
        customClaimConverter = CustomClaimConverter(clientRegistrationRepository.findByRegistrationId("oidc"), restTemplate)
        val mapper = ObjectMapper()
        val user = mapper.createObjectNode()
        user.put("preferred_username", USERNAME)
        user.put("given_name", NAME)
        user.put("family_name", FAMILY_NAME)
        user.putArray("groups").add(ADMIN).add(USER)
        val userInfo:ResponseEntity<ObjectNode> = ResponseEntity.ok(user)
        `when`(restTemplate.exchange(eq("https://api.jhipster.org/user"), eq(HttpMethod.GET), any(HttpEntity::class.java), ArgumentMatchers.any<Class<ObjectNode>>())).thenReturn(userInfo)
    }

    @Test
    <%_ if (databaseType !== 'no') { _%>
    @Transactional
    <%_ } _%>
    fun testConvert() {
        val claims = hashMapOf<String, Any>()
        claims["sub"] = "123"
        val convertedClaims = customClaimConverter.convert(claims)

        assertThat(convertedClaims?.get("preferred_username")).isEqualTo(USERNAME)
        assertThat(convertedClaims?.get("given_name")).isEqualTo(NAME)
        assertThat(convertedClaims?.get("family_name")).isEqualTo(FAMILY_NAME)
        assertThat(convertedClaims?.get("groups")).isEqualTo(listOf(ADMIN, USER))
    }
}