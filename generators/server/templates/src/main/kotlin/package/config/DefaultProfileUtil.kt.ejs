<%#
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%=packageName%>.config

import io.github.jhipster.config.JHipsterConstants

import org.springframework.boot.SpringApplication
import org.springframework.core.env.Environment

/**
 * Utility class to load a Spring profile to be used as default
 * when there is no `spring.profiles.active` set in the environment or as command line argument.
 * If the value is not available in `application.yml` then `dev` profile will be used as default.
 */

private const val SPRING_PROFILE_DEFAULT = "spring.profiles.default"

/**
 * Set a default to use when no profile is configured.
 *
 * @param app the Spring application.
 */
fun addDefaultProfile(app: SpringApplication) {
    val defProperties = mutableMapOf<String, String>()
    /*
    * The default profile to use when no other profiles are defined
    * This cannot be set in the application.yml file.
    * See https://github.com/spring-projects/spring-boot/issues/1219
    */
    defProperties[SPRING_PROFILE_DEFAULT] = JHipsterConstants.SPRING_PROFILE_DEVELOPMENT
    app.setDefaultProperties(defProperties.toMap())
}
