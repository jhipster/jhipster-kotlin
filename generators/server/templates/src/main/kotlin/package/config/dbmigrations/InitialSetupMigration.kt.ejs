<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%=packageName%>.config.dbmigrations

import <%=packageName%>.domain.Authority
import <%=packageName%>.domain.<%= asEntity('User') %>
import <%=packageName%>.security.ADMIN
import <%=packageName%>.security.USER

import com.github.mongobee.changeset.ChangeLog
import com.github.mongobee.changeset.ChangeSet
import org.springframework.data.mongodb.core.MongoTemplate

import java.time.Instant

/**
 * Creates the initial database setup.
 */
@ChangeLog(order = "001")
@Suppress("unused")
class InitialSetupMigration {

    @ChangeSet(order = "01", author = "initiator", id = "01-addAuthorities")
    fun addAuthorities(mongoTemplate: MongoTemplate) {
        val adminAuthority = Authority(ADMIN)
        val userAuthority = Authority(USER)

        mongoTemplate.save(adminAuthority)
        mongoTemplate.save(userAuthority)
    }
    <%_ if (authenticationType !== 'oauth2') { _%>

    @ChangeSet(order = "02", author = "initiator", id = "02-addUsers")
    fun addUsers(mongoTemplate: MongoTemplate) {
        val adminAuthority = Authority(ADMIN)
        val userAuthority = Authority(USER)

        val systemUser = <%= asEntity('User') %>(
            id = "user-0",
            login = "system",
            <%_ if (authenticationType !== 'oauth2') { _%>
            password = "\$2a\$10\$mE.qmcV0mFU5NcKh73TZx.z4ueI/.bDWbj0T1BYyqP481kGGarKLG",
            <%_ } _%>
            firstName = "",
            lastName = "System",
            email = "system@localhost",
            activated = true,
            langKey = "en",
            createdBy = "system",
            createdDate = Instant.now(),
            authorities = mutableSetOf(adminAuthority, userAuthority)
        )
        mongoTemplate.save(systemUser)

        val anonymousUser = <%= asEntity('User') %>(
            id = "user-1",
            login = "anonymoususer",
            <%_ if (authenticationType !== 'oauth2') { _%>
            password = "\$2a\$10\$j8S5d7Sr7.8VTOYNviDPOeWX8KcYILUVJBsYV83Y5NtECayypx9lO",
            <%_ } _%>
            firstName = "Anonymous",
            lastName = "User",
            email = "anonymous@localhost",
            activated = true,
            langKey = "en",
            createdBy = systemUser.login,
            createdDate = Instant.now()
        )
        mongoTemplate.save(anonymousUser)

        val adminUser = <%= asEntity('User') %>(
            id = "user-2",
            login = "admin",
            <%_ if (authenticationType !== 'oauth2') { _%>
            password = "\$2a\$10\$gSAhZrxMllrbgj/kkK9UceBPpChGWJA7SYIb1Mqo.n5aNLq1/oRrC",
            <%_ } _%>
            firstName = "admin",
            lastName = "Administrator",
            email = "admin@localhost",
            activated = true,
            langKey = "en",
            createdBy = systemUser.login,
            createdDate = Instant.now(),
            authorities = mutableSetOf(adminAuthority, userAuthority)
        )
        mongoTemplate.save(adminUser)

        val userUser = <%= asEntity('User') %>(
            id = "user-3",
            login = "user",
            <%_ if (authenticationType !== 'oauth2') { _%>
            password = "\$2a\$10\$VEjxo0jq2YG9Rbk2HmX9S.k1uZBGYUHdUcid3g/vfiEl7lwWgOH/K",
            <%_ } _%>
            firstName = "",
            lastName = "User",
            email = "user@localhost",
            activated = true,
            langKey = "en",
            createdBy = systemUser.login,
            createdDate = Instant.now(),
            authorities = mutableSetOf(userAuthority)
        )
        mongoTemplate.save(userUser)
    }
    <%_ } _%>
}
